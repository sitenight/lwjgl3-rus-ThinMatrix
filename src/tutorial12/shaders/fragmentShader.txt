#version 400 core

in vec2 pass_textureCoords; // текстурные координаты
in vec3 surfaceNormal; // нормаль поверхности
in vec3 toLightVector; // вектор направленный на источник света

out vec4 fragColor;

uniform sampler2D textureSampler;
uniform vec3 lightColour; // цвет источника света

void main()
{
    // нормализируем данные
    vec3 unitNormal = normalize(surfaceNormal);
    vec3 unitLight = normalize(toLightVector);

    // вычисляем скалярную разницу между векторами
    float nDotl = dot(unitNormal,unitLight);
    float brightness = max(nDotl, 0.0); // яркость пикселя от 0 до 1
    vec3 diffuse = brightness * lightColour; // фоновый свет

    // метод texture координату точки на модели сопоставляет с координатой точи на текстуре
    // и возвращает цвет пикселя 
    fragColor = vec4(diffuse, 1.0) * texture(textureSampler, pass_textureCoords);
}